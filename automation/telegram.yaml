
  - id: Определение ID
    alias: telegram_id
    initial_state: true
    trigger:
      - platform: event
        event_type: telegram_text
    condition:
      - condition: template
        value_template: >-
          {{ trigger.event.data.text in ["whoami", "Кто я?"] }}
      # - condition: state
      #   entity_id: switch.control_mode
      #   state: 'on'
    action:
      - service: telegram_bot.send_message
        data_template:
          target: "{{ trigger.event.data.chat_id }}"
          message: |
            Твой ID {{ trigger.event.data.user_id }}

  - id: Фраза по команде speak
    alias: 'Telegram bot reply with Google TTS Speak'
    initial_state: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/speak'                            #### /speak
    action:
      - service: tts.google_translate_say
        entity_id: media_player.kitchen   # Say to the sonos speaker device entity
        data_template:
          language: ru
          message: >
            Внимание, сообщаю прогноз погоды на сегодня: {{ states('sensor.dark_sky_summary_0d') }}
      - delay: 0:0:8
      - service: tts.google_translate_say # tts.alice_say
        entity_id: media_player.kitchen   # Say to the sonos speaker device entity
                                          # media_player.yandex_station
                                          # media_player.bedroom
                                          # media_player.home_theater
                                          # media_player.home_theater_zone2
                                          # 
        data_template:
          language: ru
          message: >
            А ещё температура за окном {{ states('sensor.dark_sky_temperature')|int }} градусов


  - alias: 'Telegram bot inline reply with Google TTS Speak'
    initial_state: true
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/speak'                            #### /speak
    action:
      - service: tts.google_translate_say
        entity_id: media_player.kitchen   # Say to the sonos speaker device entity
        data_template:
          language: ru
          message: >
            Внимание, сообщаю прогноз погоды на сегодня: {{ states('sensor.dark_sky_summary_0d') }}
      - delay: 0:0:8
      - service: tts.google_translate_say # tts.yandex_station_say
        entity_id: media_player.yandex_station_mini   # Say to the sonos speaker device entity media_player.kitchen
                                          # media_player.yandex_station
                                          # media_player.bedroom
                                          # media_player.home_theater
                                          # media_player.home_theater_zone2
                                          # media_player.yandex_station_mini
        data_template:
          language: ru
          message: >
            А ещё температура за окном {{ states('sensor.dark_sky_temperature')|int }} градусов


####
  - id: Фраза по команде say text
    initial_state: true
    alias: 'Telegram bot say text via Google TTS'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/say'                            #### /say text
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}} Message from {{ trigger.event.data["user_id"] }} received : {{ trigger.event.data.args }}.
#### test attempt to use sonos speaker
#      - service: script.sonos_tts

      - service: tts.google_translate_say
        entity_id: media_player.kitchen   # Say to the sonos speaker device entity

#        entity_id: media_player.vlcmp   # Say to the media_player.adkodi device entity
        data_template:
          language: ru      # RU is more universal then en. It pronounce all text.
          message: >
            {% for state in trigger.event.data["args"] %} {{ state }} {% endfor %} 
#{{ trigger.event.data.[args] }}

###########
  - id: Фраза по кнопке say text
    initial_state: true
  - alias: 'Telegram bot inline say text via Google TTS'
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        command: '/say'                            #### /say Текст
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'  
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}} От {{ trigger.event.data["user_id"] }}  получено cообщение: {{ trigger.event.data.args }}.

#### test attempt to use sonos speaker
#      - service: script.sonos_tts

      - service: tts.google_translate_say
        entity_id: media_player.kitchen   # Say to the sonos speaker device entity
        data_template:
          language: ru      # RU is more universal then en. It pronounce all text.
          message: >
            {% for state in trigger.event.data["args"] %} {{ state }} {% endfor %} 

############
#   - alias: 'Telegram bot reply to yandex'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: "/yandex"                             #### /yandex
#     action:
#       - service: telegram_bot.send_message
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'  
#           message: "Выбор колонки:"
#           inline_keyboard:                  
#             - "Спальня:/be, Кухня:/ki"
#             - "Модуль:/mo "

#############
  - id: Телеграм команда start
    initial_state: true
    alias: 'Telegram bot reply to start'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: "/start"                             #### /start
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'  
          message: "Команды:"
#          data:                     #### это похоже лишнее!!!

#### example from https://github.com/OXOTH1K/homeassistant/blob/master/automations/telegram_menu.yaml
#          keyboard:
#            - "Гостиная, Кухня, Ванная"
#            - '{{"\U0001F4F7"}}, {{"\U0001F4F9"}}'          
          inline_keyboard:                  
            - "{{ 'Домофон однократно:/oo, Проверка:/ping' }}"
            - "{{ 'Домофон беззвучно:/mo, Дача:/photod' }}"
#              - 'Check:/ping, Reset:/rst, Status:/status'
#              - 'Say:/speak, Speak:/say Test, Snapshot:/photo'
#### Смотри package domofon.yaml

#### пример использования на https://github.com/home-assistant/home-assistant/issues/7670
  - id: Телеграм команда ping
    initial_state: true
    alias: 'Telegram bot reply pong to command /ping'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/ping'                              #### /ping
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}} Pong, Message from {{ trigger.event.data["user_id"] }}.
    
  - id: Телеграм кнопка ping
    initial_state: true    
    alias: 'Telegram bot inline reply pong to ping'
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: "/ping"                              #### /ping
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'  
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}} Есть контакт! В ответ пользователю № {{ trigger.event.data["user_id"] }}.


#### https://www.home-assistant.io/components/telegram_bot/
  - id: Телеграм команда photo
    initial_state: true
    alias: 'Telegram bot send photo'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/photo'                             #### /photo
    action:
      - service: telegram_bot.send_photo
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
#          {"url":"http://localhost:8123{{ states.camera.dafang3.attributes.entity_picture}}","target":"!secret telegram_bot_chat_id_beeline", "keyboard":["/ping, /speak", "/photo"]}
#          {"url":"https://hellad.ddns.us:88{{ states.camera.adcamera.attributes.entity_picture}}","target":"!secret telegram_bot_chat_id_beeline", "keyboard":["/ping, /speak", "/photo"]}  #does not work with SSL
#          file: "/tmp/camera.png"
          url: !secret HLS_dafang_still_url       #### https://github.com/EliasKotlyar/Xiaomi-Dafang-Hacks/blob/master/integration/homeassistant/homeassistant.md
#          file: "/home/homeassistant/.homeassistant/www/camera.png"
          disable_notification: false
          verify_ssl: false
          username: !secret dafang_user
          password: !secret dafang_password

#############
  - id: Телеграм команда photod
    initial_state: true
    alias: 'Telegram bot send dacha photo'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/photod'                             #### /photod
    action:
      - service: shell_command.snapshot_dome_delete
      - delay:
          hours: 0
          minutes: 0
          seconds: 2   
      - service: shell_command.snapshot_dome          
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}} Photo should be sent in 10 seconds to  {{ trigger.event.data["user_id"] }}.
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - service: telegram_bot.send_photo
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
#          url: !secret dahua_dome_camera_still_image_url  #why don't work?
          
          file: "www/snapshots/snapshot_dome.jpg"
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
      - service: shell_command.snapshot_dome_delete

#############
  - id: Телеграм кнопка photod
    initial_state: true
    alias: 'Telegram bot send dacha photo callback'
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: '/photod'                             #### /photod
    action:
#      - service: shell_command.snapshot_dome          # file www/snapshots/snapshot_dome.jpg
#      - delay:
#          hours: 0
#          minutes: 0
#          seconds: 2
#          milliseconds: 0
      - service: telegram_bot.send_photo
        data_template:
          target: '{{ trigger.event.data.user_id }}'  
          url: !secret dahua_dome_camera_still_image_url

#          file: "www/snapshots/snapshot_dome.jpg"
##### info in HASS event:
# Event 0 fired 19:34:
# {
#     "event_type": "telegram_callback",
#     "data": {
#         "id": "5120427740815196",
#         "chat_instance": "-5256869468197680806",
#         "data": "/photod",
#         "message": {
#             "message_id": 59469,
#             "date": 1665160466,
#             "chat": {
#                 "id": 1192192,
#                 "type": "private",
#                 "first_name": "AD",
#                 "last_name": "DA"
#             },
#             "text": "Команды:",
#             "entities": [],
#             "caption_entities": [],
#             "photo": [],
#             "new_chat_members": [],
#             "new_chat_photo": [],
#             "delete_chat_photo": false,
#             "group_chat_created": false,
#             "supergroup_chat_created": false,
#             "channel_chat_created": false,
#             "reply_markup": {
#                 "inline_keyboard": [
#                     [
#                         {
#                             "text": "Домофон однократно",
#                             "callback_data": "/oo"
#                         },
#                         {
#                             "text": " Проверка",
#                             "callback_data": "/ping"
#                         }
#                     ],
#                     [
#                         {
#                             "text": "Домофон беззвучно",
#                             "callback_data": "/mo"
#                         },
#                         {
#                             "text": " Дача",
#                             "callback_data": "/photod"
#                         }
#                     ]
#                 ]
#             },
#             "from": {
#                 "id": 396034099,
#                 "first_name": "HelladTelegramBot",
#                 "is_bot": true,
#                 "username": "HelladTelegramBot"
#             }
#         },
#         "chat_id": 1192192,
#         "command": "/photod",
#         "args": []
#     },
#     "origin": "LOCAL",
#     "time_fired": "2022-10-07T16:34:32.898919+00:00",
#     "context": {
#         "id": "01GESMRTA27EHH5CAKRQKJEPV2",
#         "parent_id": null,
#         "user_id": null
#     }
#}

# Invalid config for [automation]: required key not provided @ data['action']. Got None required key not provided @ data['trigger']. Got None. (See ?, line ?).
# Logger: homeassistant.components.automation.telegram_bot_inline_send_dacha_photo
# Source: components/automation/__init__.py:525
# Integration: Automation (documentation, issues)
# First occurred: 19:20:33 (3 occurrences)
# Last logged: 19:34:37
# Error while executing automation automation.telegram_bot_inline_send_dacha_photo: expected int @ data['target'][0]


############
  - id: Телеграм команда photob
    initial_state: true
    alias: 'Telegram bot send balcony photo'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/photob'                             #### /photob
    action:
      - service: shell_command.snapshot_bullet          # file www/snapshots/snapshot_bullet.jpg

      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}} Photo should be sent to  {{ trigger.event.data["user_id"] }}.
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: telegram_bot.send_photo
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          file: "www/snapshots/snapshot_bullet.jpg"

##########
  - id: Телеграм команда photok
    initial_state: true
    alias: 'Telegram bot send kitchen photo'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/photok'                             #### /photok
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}} Photo should be sent to  {{ trigger.event.data["user_id"] }}.
      - service: telegram_bot.send_photo
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          url: !secret dahua_dome_camera_still_image_url
#          file: "/home/homeassistant/.homeassistant/www/camera.png"
          verify_ssl: false
          username: !secret dahua_user
          password: !secret dahua_password

# ############################### 
# #This automation replies to a # 
# #telegram message with various# 
# #status details for the system# 
# ###############################
#   - alias: 'Telegram reply with Status' 
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/status'                            #### /status
#     action:
#       - service: telegram_bot.send_message
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'
#           message: >-
#             Система работает ;) ! С момента старта прошло  {{states.sensor.hass_uptime.state}} сек. 
#             Irina is at {{ states.device_tracker.irina.state|replace("_"," ") }} .
#             Andrey is at {{ states.device_tracker.andrey.state|replace("_"," ") }} .
#             Pavel is at {{ states.device_tracker.pavel.state|replace("_"," ") }} ,
#             and Prokhor is at {{ states.device_tracker.prohor.state|replace("_"," ") }}.
#             Температура и влажность дома: {{ states('sensor.aeon_labs_zw100_multisensor_6_temperature') }}C {{ states('sensor.aeon_labs_zw100_multisensor_6_relative_humidity') }}%. 
#             Состояние кондиционера: Power {{ states.switch.fujitsu.state }}, current mode {{ states.input_select.bedroom_aircon_mode.state }}-{{ states.input_select.bedroom_aircon_fan.state }}-{{ states.input_number.bedroom_aircon_temperature.state|int }} .
#             Свет в корридоре: Power {{ states.sensor.aeon_labs_zw111_nano_dimmer_power.state }}, Volt {{ states.sensor.aeon_labs_zw111_nano_dimmer_voltage.state }}, Luminance {{ states.sensor.aeon_labs_zw100_multisensor_6_luminance.state  }}, Energy  {{ states.sensor.aeon_labs_zw111_nano_dimmer_energy.state }}

# #################################################################################
# #	objects to be used for aircon control
# #       switch.fujitsu,input_select.bedroom_aircon_power,input_select.bedroom_aircon_mode,
# #	input_select.bedroom_aircon_fan,input_number.bedroom_aircon_temperature
# #################################################################################

#   - alias: 'Telegram bot turn-off AirConditioner'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/acoff'                          #### /acoff
#     action:
# #### надо изменить статусы переключателей в web gui и потом вызывать скрипт с их новыми значениями!
# #      - service: shell_command.set_ac_off
# #      - service: shell_command.ac_off          # /home/homeassistant/.homeassistant/shell_command/acon.sh
# #### try to change status of dedicated switch to turn on aircon
#       - service: switch.turn_off
#         data: 
#           entity_id: switch.fujitsu
#       - delay: 0:0:1
#       - service: tts.google_translate_say
#         entity_id: media_player.kitchen   # Say to the media_player.vlcmp device entity
#         data_template:
#           language: ru
#           message: >
#             Внимание! Выполнена команда выключения кондиционера
#       - service: telegram_bot.send_message
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'
#           message: >
#             Air conditioner turned off via telegram command.

#   - alias: 'Telegram bot turn-on AirConditioner'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/acon'                           #### /acon
#     action:
# #### надо изменить статусы переключателей в web gui и потом вызывать скрипт с их новыми значениями!
# #      - service: shell_command.set_ac_on
# #      - service: shell_command.ac_on       #don't use set_ac_on!?
# #### try to change status of dedicated switch to turn on aircon
#       - service: switch.turn_on
#         data:
#           entity_id: switch.fujitsu
#       - delay: 0:0:1
#       - service: tts.google_translate_say
#         entity_id: media_player.kitchen   # Say to the media_player.vlcmp device entity
#         data_template:
#           language: ru
#           message: >
#             Внимение! Выполнется команда включения кондиционера
#       - service: telegram_bot.send_message
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'
#           message: >
#             Air conditioner turned on via telegram command.

# ####https://github.com/AlexxIT/YandexStation#%D0%BF%D1%80%D0%BE%D0%B8%D0%B3%D1%80%D1%8B%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BC%D0%B5%D0%B4%D0%B8%D0%B0-%D0%BF%D0%BE-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B0%D0%BC
# # Плейлист Я.Музыки https://music.yandex.ru/users/music.partners/playlists/2050 https://music.yandex.ru/users/Deberdeevy/playlists/1003
# # Альбом  Я.Музыки https://music.yandex.ru/album/2150009
# # Песня https://music.yandex.ru/album/2150009/track/19174962
# # Исполнитель Я.Музыки https://music.yandex.ru/artist/41114 https://music.yandex.ru/artist/5763226
# # YouTube https://www.youtube.com/watch?v=9lWufLCozSw
# # Кинопоиск  https://www.kinopoisk.ru/film/819101/ - не работает
# # Кинопоиск HD https://hd.kinopoisk.ru/film/4fabed06d035b5e1b87b75607927c8e5/ - не работает

# #### See also yandex_station_automation.yaml line 33 for command ./станция !!!
# #### syntax /station <URL>
#   - alias: 'Telegram bot start play on Yandex.Station'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/station'
#     action:
#       - service: telegram_bot.send_message
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
#           message: >
#             {{now().strftime("%H:%M:%S %Y-%m-%d")}}  Message from {{ trigger.event.data["user_id"] }}.Content id: {{ trigger.event.data['args']|join(' ') }}. Content type question + {{ trigger.event.data.chat_id }} - not used.
#       - service: media_player.play_media
#         entity_id: media_player.yandex_station
#         data_template:
#           media_content_id: "{{ trigger.event.data['args']|join(' ') }}"
#           media_content_type: "question:{{ trigger.event.data.chat_id }}"

# #### play on yandex station mini 2 in kitchen
#   - alias: 'Telegram bot start play on Yandex.Mini'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/mini'
#     action:
#       - service: media_player.play_media
#         entity_id: media_player.yandex_station_mini
#         data_template:
#           media_content_id: "{{ trigger.event.data['args']|join(' ') }}"
#           media_content_type: "question:{{ trigger.event.data.chat_id }}"


#   - alias: 'Telegram bot start play on Yandex.Module'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/module'
#     action:
#       service: media_player.play_media
#       entity_id: media_player.yandex_module
#       data_template:
#         media_content_id: "{{ trigger.event.data['args']|join(' ') }}"
#         media_content_type: "question:{{ trigger.event.data.chat_id }}"

# # В логе ХА после команды моему боту. почему то воспринимает как telegram_text
# # из-за названия команды на русском? если изменить на /station , то работает штатно


# # правило ниже перенаправляет текст, полученный ботом, на яндекс станцию!!!
# # бот участвует в семейной группе и это ломает всю переписку
# #  - alias: 'Telegram bot talk with Alice on station'
# #    trigger:
# #      platform: event
# #      event_type: telegram_text
# #    action:
# #      service: media_player.play_media
# #      entity_id: media_player.yandex_station  # замените на вашу станцию
# #      data:
# #        media_content_id: "{{ trigger.event.data.text }}"
# #        media_content_type: "question:{{ trigger.event.data.chat_id }}"


#   # - alias: 'Response from Yandex to Telegram bot command' 
#   #   trigger:
#   #     platform: event
#   #     event_type: yandex_station_response
#   #   action:
#   #     service: telegram_bot.send_message
#   #     data_template:
#   #       target: "{{ trigger.event.data.request_id }}"
#   #       message: "{{ trigger.event.data.text }}"

          
#   - alias: 'Yandex speaker selection by Telegram bot command'
#     trigger:
#       platform: event
#       event_type: telegram_text
#     action:
#       - choose:
#         - conditions: '{{ is_state("input_select.yandex_telegram_target", "Спальня") }}'
#           sequence:
#             - service: media_player.play_media
#               entity_id: media_player.yandex_station # Спальня
#               data_template:
#                 media_content_id: "{{ trigger.event.data.text }}"
#                 media_content_type: "question:{{ trigger.event.data.chat_id }}"
#         - conditions: '{{ is_state("input_select.yandex_telegram_target", "Кухня") }}'
#           sequence:
#             - service: media_player.play_media
#               entity_id: media_player.yandex_station_mini # Кухня
#               data_template:
#                 media_content_id: "{{ trigger.event.data.text }}"
#                 media_content_type: "question:{{ trigger.event.data.chat_id }}"
#         - conditions: '{{ is_state("input_select.yandex_telegram_target", "Модуль") }}'
#           sequence:
#             - service: media_player.play_media
#               entity_id: media_player.yandex_module # Модуль на кухне
#               data_template:
#                 media_content_id: "{{ trigger.event.data.text }}"
#                 media_content_type: "question:{{ trigger.event.data.chat_id }}"
#         default:
#           - service: media_player.play_media
#             entity_id: media_player.yandex_station # Спальня
#             data_template:
#               media_content_id: "{{ trigger.event.data.text }}"
#               media_content_type: "question:{{ trigger.event.data.chat_id }}"

#   - alias: 'Telegram bot inlinecommand react to yandex in bedroom'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: "/be"
#     action:
#         service: input_select.select_option
#         entity_id: input_select.yandex_telegram_target
#         data:
#           option: Спальня

#   - alias: 'Telegram bot inline react to yandex in bedroom'
#     trigger:
#       platform: event
#       event_type: telegram_callback
#       event_data:
#         data: "/be"                              #### /be
#     action:
#       - service: telegram_bot.send_message
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'  
#           message: >
#             {{now().strftime("%H:%M:%S %Y-%m-%d")}} Выбрана яндекс станция в спальне.

#       - service: input_select.select_option
#         entity_id: input_select.yandex_telegram_target
#         data:
#           option: Спальня

#   - alias: 'Telegram bot command react to yandex in kitchen'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/ki'
#     action:
#         service: input_select.select_option
#         entity_id: input_select.yandex_telegram_target
#         data:
#           option: Кухня

#   - alias: 'Telegram bot inline react to yandex in kitchen'
#     trigger:
#       platform: event
#       event_type: telegram_callback
#       event_data:
#         data: "/ki"                              #### /ki
#     action:
#       - service: telegram_bot.send_message
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'  
#           message: >
#             {{now().strftime("%H:%M:%S %Y-%m-%d")}} Выбрана яндекс станция мини на кухне.

#       - service: input_select.select_option
#         entity_id: input_select.yandex_telegram_target
#         data:
#           option: Кухня

#   - alias: 'Telegram bot command react to yandex module'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/mo'
#     action:
#         service: input_select.select_option
#         entity_id: input_select.yandex_telegram_target
#         data:
#           option: Модуль

################################################################################


#   - alias: 'Telegram bot restart HASS'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/rst'                              #### /rst
#     action:
#       - service: shell_command.hass_restart
#       - service: telegram_bot.send_message
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'
#           message: >
#             Home assistant restarted via telegram command.

#   - alias: 'Telegram bot turn off RasPi'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/end'                             #### /end
#     action:
#       - service: shell_command.end
#       - service: telegram_bot.send_message
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'
#           message: >
#             RaspberryPi turned off via telegram command.


#   - alias: 'Telegram bot reboot RasPi'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/rbt'                             #### /rbt
#     action:
#       - service: shell_command.reboot
#       - service: telegram_bot.send_message
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'
#           message: >
#             RaspberryPi restarted via telegram command.

########  End of telegram automation rules

# #### https://www.home-assistant.io/components/telegram_bot/
# ##   send map with Irina location
#   - alias: 'Telegram bot send Irina location'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/imap'                             #### /imap
#     action:
#       - service: telegram_bot.send_photo
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
#           url: https://static-maps.yandex.ru/1.x/?l=map&pt={{ states.device_tracker.irina_g7.attributes.longitude }},{{ states.device_tracker.irina_g7.attributes.latitude }},pm2lbl&z=17&l=map     
#           disable_notification: false
#           verify_ssl: false

# #### https://www.home-assistant.io/components/telegram_bot/
# ##   send map with OnePlus location
#   - alias: 'Telegram bot send Andrey location'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/amap'                             #### /amap
#     action:
#       - service: telegram_bot.send_photo
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
#           url: https://static-maps.yandex.ru/1.x/?l=map&pt={{ states.device_tracker.adhtc_2.attributes.longitude }},{{ states.device_tracker.adhtc_2.attributes.latitude }},ya_ru&z=17&l=map     
#           disable_notification: false
#           verify_ssl: false

# #### https://www.home-assistant.io/components/telegram_bot/
# ##   send map with iphone location
#   - alias: 'Telegram bot send Iphone location'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/xsmap'                             #### /xsmap
#     action:
#       - service: telegram_bot.send_photo
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
#           url: https://static-maps.yandex.ru/1.x/?l=map&pt={{ states.device_tracker.adlg4_iphone_2.attributes.longitude }},{{ states.device_tracker.adlg4_iphone_2.attributes.latitude }},pm2rdm&z=17&l=map     
#           disable_notification: false
#           verify_ssl: false

# #### https://www.home-assistant.io/components/telegram_bot/
# ##   send map with Prokhor location
#   - alias: 'Telegram bot send Prokhor location'
#     trigger:
#       platform: event
#       event_type: telegram_command
#       event_data:
#         command: '/prmap'                             #### /prmap
#     action:
#       - service: telegram_bot.send_photo
#         data_template:
#           target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
#           url: https://static-maps.yandex.ru/1.x/?l=map&pt={{ states.device_tracker.mi4prime_xiaomi.attributes.longitude }},{{ states.device_tracker.mi4prime_xiaomi.attributes.latitude }},pm2blywl&z=17&l=map     
#           disable_notification: false
#           verify_ssl: false
