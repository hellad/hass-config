
  - alias: 'Telegram bot reply to start'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/start'                             #### /start
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'  
          message: 'Commands:'
          data:
            inline_keyboard:                 ####keyboard: 
              - 'Check:/ping, Reset:/rst, Status:/status'
              - 'Say:/speak, Speak:/say Test, Snapshot:/photo'
#    action:
#      - service: notify.telegram_direct_mega
#        data_template:
#          title: 'Привет от домашнего помощника!'
#          message: >
#             Какую команду исполнить?
#          data:
#            keyboard:
#              - '/ping, /rst, /status'
#              - '/acon, /acoff, /photo'

             
#   data I obtained on /start:
#trigger.platform:  event
#trigger.event:  <Event telegram_command[L]: user_id=137618255, from_last=N/A, from_first=Andrey, chat_id=137618255, args=[], command=/start>
# on /start rst :
#trigger.event:  <Event telegram_command[L]: user_id=137618255, from_last=N/A, from_first=Andrey, chat_id=137618255, args=['rst'], command=/start>
# on /start text from bot :
#trigger.event:  <Event telegram_command[L]: chat_id=137618255, args=['text', 'from', 'bot'], user_id=137618255, command=/start, from_first=Andrey>


#### пример использования на https://github.com/home-assistant/home-assistant/issues/7670
  - alias: 'Telegram bot reply pong to command ping'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/ping'                              #### /ping
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}} Pong, Message from {{ trigger.event.data["user_id"] }}.
            
            
#  - alias: 'Telegram bot inline reply pong to ping'
#    hide_entity: true
#    trigger:
#      platform: event
#      event_type: telegram_callback
#      event_data:
#        data: '/ping'                              #### /ping
#    action:
#      - service: telegram_bot.answer_callback_query
#        data_template:
#          callback_query_id: '{{ trigger.event.data.id }}'
##          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
#          message: >-
#            Callback received from {{ trigger.event.data.from_first }}.
#            Message id: {{ trigger.event.data.message.message_id }}.
#            Data: {{ trigger.event.data.data }}
#            {{now().strftime("%H:%M:%S %Y-%m-%d")}} Pong, Message from {{ trigger.event.data["user_id"] }}.

  - alias: 'Telegram bot reply with Google TTS Speak'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/speak'                            #### /speak
    action:
      - service: tts.google_translate_say
        entity_id: media_player.kitchen   # Say to the sonos speaker device entity
        data_template:
          language: ru
          message: >
            Внимание, сообщаю прогноз погоды на сегодня: {{ states('sensor.dark_sky_summary_0d') }}
      - delay: 0:0:8
      - service: tts.google_translate_say
        entity_id: media_player.kitchen   # Say to the sonos speaker device entity
        data_template:
          language: ru
          message: >
            А ещё температура за окном {{ states('sensor.dark_sky_temperature')|int }} градусов





  - alias: 'Telegram bot say text via Google TTS'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/say'                            #### /say text
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}} Message from {{ trigger.event.data["user_id"] }} received : {{ trigger.event.data.args }}.
#            {{now().strftime("%H:%M:%S %Y-%m-%d")}} Message from {{ trigger.event.data["user_id"] }} received : {{ trigger.event.data.data }}.

#### test attempt to use sonos speaker
#      - service: script.sonos_tts

      - service: tts.google_translate_say
        entity_id: media_player.kitchen   # Say to the sonos speaker device entity

#        entity_id: media_player.vlcmp   # Say to the media_player.adkodi device entity
        data_template:
          language: ru      # RU is more universal then en. It pronounce all text.
          message: >
            {% for state in trigger.event.data["args"] %} {{ state }} {% endfor %} 
#{{ trigger.event.data.[args] }}

#### https://www.home-assistant.io/components/telegram_bot/
  - alias: 'Telegram bot send photo'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/photo'                             #### /photo
    action:
      - service: telegram_bot.send_photo
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
#          {"url":"http://localhost:8123{{ states.camera.dafang3.attributes.entity_picture}}","target":"!secret telegram_bot_chat_id_beeline", "keyboard":["/ping, /speak", "/photo"]}
#          {"url":"https://hellad.ddns.us:88{{ states.camera.adcamera.attributes.entity_picture}}","target":"!secret telegram_bot_chat_id_beeline", "keyboard":["/ping, /speak", "/photo"]}  #does not work with SSL
#          file: "/tmp/camera.png"
          url: https://192.168.192.44/cgi-bin/currentpic.cgi        #### https://github.com/EliasKotlyar/Xiaomi-Dafang-Hacks/blob/master/integration/homeassistant/homeassistant.md
#          file: "/home/homeassistant/.homeassistant/www/camera.png"
          disable_notification: false
          verify_ssl: false
          username: root
          password: ismart12

  - alias: 'Telegram bot send kitchen photo'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/photok'                             #### /photok
    action:
      - service: telegram_bot.send_photo
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
#          {"url":"http://localhost:8123{{ states.camera.adcamera.attributes.entity_picture}}","target":"!secret telegram_bot_chat_id_beeline", "keyboard":["/ping, /speak", "/photo"]}
#          {"url":"https://hellad.ddns.us:88{{ states.camera.adcamera.attributes.entity_picture}}","target":"!secret telegram_bot_chat_id_beeline", "keyboard":["/ping, /speak", "/photo"]}  #does not work with SSL
          url: http://root:ismart12@192.168.192.44/cgi-bin/currentpic.cgi        #### https://github.com/EliasKotlyar/Xiaomi-Dafang-Hacks/blob/master/integration/homeassistant/homeassistant.md
#          file: "/home/homeassistant/.homeassistant/www/camera.png"

#### https://www.home-assistant.io/components/telegram_bot/
##   send map with Irina location
  - alias: 'Telegram bot send Irina location'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/imap'                             #### /imap
    action:
      - service: telegram_bot.send_photo
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          url: https://static-maps.yandex.ru/1.x/?l=map&pt={{ states.device_tracker.irina_g7.attributes.longitude }},{{ states.device_tracker.irina_g7.attributes.latitude }},pm2lbl&z=17&l=map     
          disable_notification: false
          verify_ssl: false

#### https://www.home-assistant.io/components/telegram_bot/
##   send map with HTC location
  - alias: 'Telegram bot send Irina location'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/amap'                             #### /amap
    action:
      - service: telegram_bot.send_photo
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          url: https://static-maps.yandex.ru/1.x/?l=map&pt={{ states.device_tracker.adhtc_2.attributes.longitude }},{{ states.device_tracker.adhtc_2.attributes.latitude }},ya_ru&z=17&l=map     
          disable_notification: false
          verify_ssl: false

#### https://www.home-assistant.io/components/telegram_bot/
##   send map with iphone location
  - alias: 'Telegram bot send Iphone location'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/xsmap'                             #### /xsmap
    action:
      - service: telegram_bot.send_photo
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          url: https://static-maps.yandex.ru/1.x/?l=map&pt={{ states.device_tracker.adlg4_iphone_2.attributes.longitude }},{{ states.device_tracker.adlg4_iphone_2.attributes.latitude }},pm2rdm&z=17&l=map     
          disable_notification: false
          verify_ssl: false

#### https://www.home-assistant.io/components/telegram_bot/
##   send map with Prokhor location
  - alias: 'Telegram bot send Prokhor location'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/prmap'                             #### /prmap
    action:
      - service: telegram_bot.send_photo
        data_template:
          target: '{{ trigger.event.data.user_id }}'  #  !secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon
          url: https://static-maps.yandex.ru/1.x/?l=map&pt={{ states.device_tracker.mi4prime_xiaomi.attributes.longitude }},{{ states.device_tracker.mi4prime_xiaomi.attributes.latitude }},pm2blywl&z=17&l=map     
          disable_notification: false
          verify_ssl: false

############################### 
#This automation replies to a # 
#telegram message with various# 
#status details for the system# 
###############################
  - alias: 'Telegram reply with Status' 
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/status'                            #### /status
    action:
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: >-
            Система работает ;) ! С момента старта прошло  {{states.sensor.hass_uptime.state}} сек. 
            Irina is at {{ states.device_tracker.irina.state|replace("_"," ") }} .
            Andrey is at {{ states.device_tracker.andrey.state|replace("_"," ") }} .
            Pavel is at {{ states.device_tracker.pavel.state|replace("_"," ") }} ,
            and Prokhor is at {{ states.device_tracker.prohor.state|replace("_"," ") }}.
            Температура и влажность дома: {{ states('sensor.aeon_labs_zw100_multisensor_6_temperature') }}C {{ states('sensor.aeon_labs_zw100_multisensor_6_relative_humidity') }}%. 
            Состояние кондиционера: Power {{ states.switch.fujitsu.state }}, current mode {{ states.input_select.bedroom_aircon_mode.state }}-{{ states.input_select.bedroom_aircon_fan.state }}-{{ states.input_number.bedroom_aircon_temperature.state|int }} .
            Свет в корридоре: Power {{ states.sensor.aeotec_zw111_nano_dimmer_power.state }}, Volt {{ states.sensor.aeotec_zw111_nano_dimmer_voltage.state }}, Luminance {{ states.sensor.aeotec_zw100_multisensor_6_luminance.state  }}, Energy  {{ states.sensor.aeotec_zw111_nano_dimmer_energy.state }}

            
  - alias: 'Telegram bot restart HASS'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/rst'                              #### /rst
    action:
      - service: shell_command.hass_restart
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: >
            Home assistant restarted via telegram command.

  - alias: 'Telegram bot turn off RasPi'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/end'                             #### /end
    action:
      - service: shell_command.end
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: >
            RaspberryPi turned off via telegram command.


  - alias: 'Telegram bot reboot RasPi'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/rbt'                             #### /rbt
    action:
      - service: shell_command.reboot
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: >
            RaspberryPi restarted via telegram command.

#################################################################################
#	objects to be used for aircon control
#       switch.fujitsu,input_select.bedroom_aircon_power,input_select.bedroom_aircon_mode,
#	input_select.bedroom_aircon_fan,input_number.bedroom_aircon_temperature
#################################################################################

  - alias: 'Telegram bot turn-off AirConditioner'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/acoff'                          #### /acoff
    action:
#### надо изменить статусы переключателей в web gui и потом вызывать скрипт с их новыми значениями!
#      - service: shell_command.set_ac_off
#      - service: shell_command.ac_off          # /home/homeassistant/.homeassistant/shell_command/acon.sh
#### try to change status of dedicated switch to turn on aircon
      - service: switch.turn_off
        data: 
          entity_id: switch.fujitsu
      - delay: 0:0:1
      - service: tts.google_translate_say
        entity_id: media_player.vlcmp   # Say to the media_player.vlcmp device entity
        data_template:
          language: ru
          message: >
            Внимание! Выполнена команда выключения кондиционера
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: >
            Air conditioner turned off via telegram command.

  - alias: 'Telegram bot turn-on AirConditioner'
    hide_entity: true
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/acon'                           #### /acon
    action:
#### надо изменить статусы переключателей в web gui и потом вызывать скрипт с их новыми значениями!
#      - service: shell_command.set_ac_on
#      - service: shell_command.ac_on       #don't use set_ac_on!?
#### try to change status of dedicated switch to turn on aircon
      - service: switch.turn_on
        data:
          entity_id: switch.fujitsu
      - delay: 0:0:1
      - service: tts.google_translate_say
        entity_id: media_player.vlcmp   # Say to the media_player.vlcmp device entity
        data_template:
          language: ru
          message: >
            Внимение! Выполнется команда включения кондиционера
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.user_id }}'
          message: >
            Air conditioner turned on via telegram command.
####################################################  End of telegram automation rules
            
#### test PIR multi sensor node in the kitchen
  - alias: Notify with LED when there is movement in kitchen
    trigger:
      platform: state
      entity_id: sensor.sn1_pir
      to: 'motion detected'
    action:
#      - service: notify.telegram_group
#        data_template:
#          message: "Обнаружено движение в кухне"
      - service: light.turn_on
        entity_id: light.sn1_led

#### test PIR multi sensor node in the kitchen
  - alias: Turn off LED when there is no movement in kitchen
    trigger:
      platform: state
      entity_id: sensor.sn1_pir
      to: 'standby'
    action:
      - service: light.turn_off
        entity_id: light.sn1_led


#### test new AM312 small PIR sensor
  - alias: Notify when there is movement in bathroom
    trigger:
      platform: state
      entity_id: binary_sensor.bathroom_motion_sensor
      to: 'on'

#### try to set 1 minute delay for reaction on sensor's changes
# https://community.home-assistant.io/t/automation-with-door-sensor-and-pir-sensor/22056/4
    condition:
      - condition: template
        value_template: '{{(as_timestamp(now())-as_timestamp(states.binary_sensor.bathroom_motion_sensor.last_updated)) | int > 60 }}'

    action:
#      service: notify.telegram_direct_mega
#      data_template:
#        title: 'Привет от домашнего помощника!'
#        message: >
#          Обнаружено движение в ванной

      - service: notify.telegram_group
        data_template:
          message: "Обнаружено движение в ванной"
