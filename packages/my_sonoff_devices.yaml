#### https://github.com/arendst/Sonoff-Tasmota/wiki/Home-Assistant-%E2%80%90-Manual-Config
#### https://github.com/peterbuga/HASS-sonoff-ewelink
#### https://github.com/peterbuga/HASS-sonoff-ewelink/tree/sonoff-bulb for LED support
#### https://sprut.ai/client/article/1020
#### Tasmota devices configured for native discovery (SetOption19 1)
################################################################################
sensor:
  - platform: mqtt
    state_topic: "mirror/tele/STATE"
    name: "BathRoom Relay Wifi Signal"                #### sensor.bathroom_relay_wifi_signal
    unit_of_measurement: "%"
    value_template: "{{value_json['Wifi'].RSSI }}"    #### https://github.com/arendst/Sonoff-Tasmota/wiki/Home-Assistant-%E2%80%90-Manual-Config#tip-wifi-rssi-signal-strength
    availability_topic: "mirror/tele/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"

#### чтобы не выключалось зеркало по датчику движения, если было включено вручную
#### использовать в условии автоматизации
  - platform: mqtt
    state_topic: "tele/mirror/SENSOR"
    name: "BathRoom mirror relay touch sensor"              #### sensor.bathroom_mirror_relay_touch_sensor
    value_template: '{{ value_json.Switch1 }}'  
#    initial_state: on


  - platform: mqtt
    state_topic: "tele/mirror/STATE"
    name: "BathRoom relay uptime"                    #### sensor.bathroom_relay_uptime
    value_template: '{{ value_json.Uptime }}'  


  - platform: mqtt
    state_topic: "tele/mirror/STATE"
    name: "BathRoom relay last result"               #### sensor.bathroom_relay_last_result
    value_template: '{{ value_json.POWER }}'

#### 
  - platform: mqtt
    name: "Bathroom relay firmware version"          #### sensor.bathroom_relay_firmware_version
#    state_topic: "homeassistant/switch/0F3C4B_RL_1/config"
#    value_template: "{{value_json['device'].sw_version }}"
    state_topic: "tasmota/discovery/BCDDC20F3C4B/config"
    value_template: "{{value_json.sw }}"
    qos: 0
    availability_topic: "mirror/tele/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"

################################################################################
#### Template sensor to control vent fan in bathroom
#### ON if humidity above 55%
  - platform: template
    sensors:
      wet_bathroom:
        friendly_name: "Wet bathroom"
        value_template: >-
          {% if states('sensor.bathroom_mqtt_humidity_sensor') | int > 55 %}
            on
          {% else %}
            off
          {% endif %}
        icon_template: >-
          {% if states('sensor.bathroom_mqtt_humidity_sensor') | int > 55 %}
            mdi:weather-rainy
          {% else %}
            mdi:hair-dryer-outline
          {% endif %} 
    
################################################################################
#### Template sensor to control vent fan in bathroom
#### was it switched on manually or automaticaly
#### sensor.bathroom_fan_switched_on_manually
#### если нет высокой влажности и включен вентилятор, значит вручную, а не автоматически по условию.
template:
  - trigger:
      - platform: state
        entity_id:
          - switch.ventiliator
          - sensor.wet_bathroom
      - platform: homeassistant
        event: start
  - sensor:
      - name: "bathroom_fan_switched_on_manually"
        state: >
          {% if is_state('switch.ventiliator', 'off') %}
            off
          {% elif is_state('switch.ventiliator', 'on') and is_state('sensor.wet_bathroom', 'off') %}
            on
          {% else %}
            failed
          {% endif %}



################################################################################
# https://github.com/arendst/Sonoff-Tasmota/wiki/Home-Assistant-%E2%80%90-Manual-Config#configure-switches
# was changed to light somehow after migration to Docker@NAS?!
# Payload from mirror/tele/STATE - mirror/tele/STATE = {"Time":"2022-04-26T12:15:01","Uptime":"24T13:07:24","UptimeSec":2120844,"Vcc":3.476,"Heap":30,"SleepMode":"Dynamic","Sleep":50,"LoadAvg":19,"MqttCount":4,"POWER":"OFF","Wifi":{"AP":1,"SSId":"adhome","BSSId":"E8:48:B8:AB:F7:4B","Channel":4,"Mode":"11n","RSSI":100,"Signal":-36,"LinkCount":3,"Downtime":"0T00:00:19"}}
switch:
  - platform: mqtt
    name: "Bathroom Mirror Light"
    state_topic: "tele/mirror/STATE"
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/mirror/POWER"
    availability_topic: "tele/mirror/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false

# switch.balcony_light_right
  - platform: mqtt
    name: "Balcony Light Right"
    state_topic: "stat/balcony/STATE"
    value_template: "{{ value_json.POWER1 }}"
    command_topic: "cmnd/balcony/POWER1"
    availability_topic: "tele/balcony/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false

# switch.balcony_light_left
  - platform: mqtt
    name: "Balcony Light Left"
    state_topic: "stat/balcony/POWER2"
    value_template: "{{ value_json.POWER2 }}"
    command_topic: "cmnd/balcony/POWER2"
    availability_topic: "tele/balcony/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false

# switch.manual_entrance_light
  - platform: mqtt
    name: "Manual Entrance Light"
    state_topic: "stat/corridor/POWER2"       #### should be same as command topic?
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/corridor-manual/POWER2"
    availability_topic: "tele/corridor/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false

# switch.manual_storeroom_light
  - platform: mqtt
    name: "Manual Storeroom Light"
    state_topic: "stat/corridor/POWER1"
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/corridor-manual/POWER1"
    availability_topic: "tele/corridor/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false

################################################################################
group:
  Sonoff_bathroom_mirror_card:
    name: Зеркало
    entities:
      - switch.bathroom_light
      - sensor.bathroom_mirror_relay_touch_sensor   #### see in sensors. does not update status immediatly!
      - sensor.bathroom_relay_wifi_signal    #### see in sensors. does not update status immediatly!
      - sensor.bathroom_relay_uptime
      - sensor.bathroom_relay_last_result
      - sensor.bathroom_relay_firmware_version

  Sonoff_bathroom_switch_card:
    name: Bathroom switch
    entities:
      - switch.ventiliator  #### vent fan (renamed in GUI)
      - light.bathroom_switch_1  #### lamp (renamed in GUI)
      - sensor.wet_bathroom

      
  Sonoff_kitchen_card:
    name: Свет на кухне
    entities:
      - switch.sonoff_10008884b8_1
      - switch.sonoff_10008884b8_2
      - light.sonoff_100010913a     #### Color LED lamp. supported_features: 21. device_id: 100010913a. effect_list: warmcool,color
      
      
      
automation:
# https://gist.github.com/AlexxIT/99ff662fe26e1db9afe27f2a4dd492e8
# https://www.home-assistant.io/docs/configuration/state_object/
  - trigger:
      platform: numeric_state
      entity_id: switch.ventiliator
      value_template: >-
        {% if states.switch.ventiliator.context.user_id and states.switch.ventiliator.state == 'on' %}
        1{% else %}0{% endif %}
      above: 0
    action:
      service: persistent_notification.create
      data:
        message: "Вентилятор включен вручную"

  - trigger:
      platform: numeric_state
      entity_id: switch.ventiliator
      value_template: >-
        {% if states.switch.ventiliator.context.id == states.automation.switch_bathroom_fan_on.context.id and states.switch.ventiliator.state == 'on' %}
        1{% else %}0{% endif %}
      above: 0
    action:
      service: persistent_notification.create
      data:
        message: "Вентилятор включен автоматизацией switch_bathroom_fan_on"

#  - alias: every_munute
#    trigger:
#      platform: time_pattern
#      minutes: "*"
#    action:
#      service: homeassistant.toggle
#      entity_id: switch.ventiliator

################################################################################
#	 Turn Bathroom Mirror Light On when movement detected ( INACTIVE! )
################################################################################
  - alias: Turn Bathroom Mirror Light On
    initial_state: false    #### !!!!! initially disable mirror light switching!!!
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_motion_sensor
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: sensor.bathroom_mirror_relay_touch_sensor
           # check the status of manual switching
        state: 'OFF'
        
    action:
      - service: homeassistant.turn_on
        entity_id: switch.bathroom_mirror_light   #### switch mirror light on programmably
#### debug message
#      - service: telegram_bot.send_message
#        data_template:
#          target: [!secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon]
#          message: >
#            {{now().strftime("%H:%M:%S %Y-%m-%d")}}  Automaticaly Switch Bathroom Mirror Light On

################################################################################
#	 Turn Bathroom Light On
################################################################################
  - alias: Turn Bathroom Light On
    initial_state: true     #### initially enable batroom light switching when motion detected
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_motion_sensor
        from: 'off'         # it's unavailable (not off) just after server reboot!
        to: 'on'
    condition:
      - condition: state
        entity_id: light.lampa_v_vanoi   #light.bathroom_switch_1
           # check the status of manual switching before turn it on
        state: 'off'
        
    action:
      - service: homeassistant.turn_on
        entity_id: light.lampa_v_vanoi #light.bathroom_switch_1   #### switch on programmably
#### debug message
#      - service: telegram_bot.send_message
#        data_template:
#          target: [!secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon]
#          message: >
#            {{now().strftime("%H:%M:%S %Y-%m-%d")}}  Automaticaly Switch Bathroom Light On

################################################################################
#	 Switch Bathroom Fan (and mirror heating) On automatically when wet
################################################################################
  - alias: Switch Bathroom Fan On
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.wet_bathroom
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: sensor.bathroom_fan_switched_on_manually    # switch.sonoff_bathroom_fan  
           # check the status of manual switching
        state: 'off'
        
    action:
      - service: homeassistant.turn_on
        entity_id: switch.ventiliator      #switch.bathroom_switch_2   #### switch fan on programmably
      - service: homeassistant.turn_on
        entity_id: switch.mirror_2   #### switch mirror drier on programmably
#### debug message
#      - service: telegram_bot.send_message
#        data_template:
#          target: [!secret telegram_bot_chat_id_beeline, !secret telegram_bot_chat_id_megafon]
#          message: >
#            {{now().strftime("%H:%M:%S %Y-%m-%d")}}  Automaticaly Switch Bathroom Fan On

################################################################################
#	 Switch Bathroom Mirror Light Off if was not turned on manually
#       (check sensor.bathroom_relay_touch_sensor status)
# time of lightning defined by variable resistor on PIR sensor
################################################################################
  - alias: Switch Bathroom Mirror Light Off
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_motion_sensor
        from: 'on'
        to: 'off'
    condition:
#      - condition: state
#        entity_id: switch.bathroom_light
#        state: 'on'
# optional: trigger only if light was ON for last X time.
#        for:
#          hours: 1
#          minutes: 1
#          seconds: 30 # light will be turned off after 30 sec of no movements но уже при следующем срабатывании датчика движения!!!
                      # ? надо делать просто отложенное на 30 секунд выключение, но если вновь появится движение, то сброс таймера
          
      - condition: state
        entity_id: sensor.bathroom_mirror_relay_touch_sensor
           # check the status of manual switching
        state: 'OFF'
    action:
      - service: homeassistant.turn_off
        entity_id: switch.mirror_2   #### switch mirror off programmably
#### debug message
      - service: telegram_bot.send_message
        data_template:
          target: [!secret telegram_bot_chat_id_beeline]
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}}sensor.bathroom_relay_touch_sensor {{ states.sensor.bathroom_relay_touch_sensor.state }}  Enforced turn off Mirror Light  after motion stopped

################################################################################
#	 Enforced Switch Bathroom Light Off in 4 minutes without motion on PIR sensor
#  
################################################################################
  - alias: Switch Bathroom Light Off
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_motion_sensor
        from: 'on'
        to: 'off'
# optional - trigger only if no motion for last X time.
        for:
#          hours: 1
          minutes: 4
#          seconds: 30 # light will be turned off after 30 sec of no movements но уже при следующем срабатывании датчика движения!!!
                      # надо делать просто отложенное на 30 секунд выключение, но если вновь появится движение, то сброс таймера
#    condition:
#      - condition: state
#        entity_id: binary_sensor.bathroom_motion_sensor
#        state: 'off'        
#      - condition: state
#        entity_id: switch.sonoff_bathroom_light
           # check the status of manual switching
#        state: 'on'
    action:
      - service: homeassistant.turn_off
        entity_id: light.lampa_v_vanoi     #light.bathroom_switch_1   #### switch off light programmably


################################################################################
#	 Switch Bathroom Fan Off
#  if was switched on automatically
################################################################################
  - alias: Switch Bathroom Fan Off
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.wet_bathroom
        from: 'on'
        to: 'off'
#    condition:       
#      - condition: state
#        entity_id: sensor.bathroom_fan_switched_on_manually      # why status failed when wet_bathroom was on
           # check the status of work
#        state: 'off'                                             # 
    action:
      - service: homeassistant.turn_off
        entity_id: switch.ventiliator       #switch.bathroom_switch_2   #### switch FAN off programmably
      - service: homeassistant.turn_off
        entity_id: switch.bathroom_mirror_light        #### switch off programmably mirror drier
      - service: persistent_notification.create       #### debug message
        data:
          message: "Вентилятор выключен автоматизацией switch_bathroom_fan_off"
################################################################################
#	 Switch Enforced Bathroom Mirror Light Off
#    if was turned on manually and has not turned off after 1 minute without movements
################################################################################
  - alias: Switch Enforced Bathroom Mirror Light Off
    initial_state: true
    trigger:
      platform: time_pattern
#      hours: 00
      minutes: '/1'                     #every 1 minutes check whether we need to switch light off
#      seconds: 00

    condition:
      - condition: state
        entity_id: binary_sensor.bathroom_motion_sensor
        state: 'off'
# optional: trigger only if state was this for last X time.
        for:
#          hours: 1
#          minutes: 1
          seconds: 60
      - condition: state
        entity_id: switch.mirror_2
        state: 'on'
      - condition: state
        entity_id: sensor.bathroom_mirror_relay_touch_sensor
#           # check the status if was manually turned on
        state: 'ON'
    action:
      - service: homeassistant.turn_off
        entity_id: switch.mirror_2   #### switch mirror off enforced programmably
#### debug message
      - service: telegram_bot.send_message
        data_template:
          target: [!secret telegram_bot_chat_id_beeline]
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}}  Enforced Switch Bathroom Mirror Light Off after 60 seconds

################################################################################
#	 Enforced Switch Bathroom Fan Off
#    if was turned on manually and has not turned off after 10 minute without movements
################################################################################
  - alias: Switch Enforced Bathroom Fan Off
    initial_state: true
    trigger:
      platform: time_pattern
#      hours: 00
      minutes: '/1'                     #every 1 minutes check whether we need to switch light off
#      seconds: 00

    condition:
      - condition: state
        entity_id: binary_sensor.bathroom_motion_sensor
        state: 'off'
# optional: trigger only if state was this for last X time.
        for:
#          hours: 1
          minutes: 10    #### 10 minutes without movements
#          seconds: 30
      - condition: state
        entity_id: sensor.bathroom_fan_switched_on_manually
        state: 'on'
# optional: trigger only if state was this for last X time.
        for:
          minutes: 10    #### 10 minutes ago fan was turned on
#      - condition: state
#        entity_id: switch.ventiliator    #### fan switch
#        state: 'on'
      - condition: state
        entity_id: sensor.wet_bathroom
#           # check the status if humidity already decreased
        state: 'off'
    action:
      - service: homeassistant.turn_off
        entity_id: switch.ventiliator         #switch.bathroom_switch_2   #### switch fan off enforced programmably
        
#### debug message
      - service: telegram_bot.send_message
        data_template:
          target: [!secret telegram_bot_chat_id_beeline]
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}}  Enforced Switch Bathroom vent fan Off after 600 seconds since last movement

########################### Sync power state. #################################################
# https://github.com/arendst/Sonoff-Tasmota/wiki/Home-Assistant#tip-sync-power-state
# This automation posts to the default "sonoffs" group topic. 
# Each device will send back their status message which contains relay power and light status.
###############################################################################################
  - alias: "Power state on HA start-up"
    initial_state: true
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: mqtt.publish
        data:
          topic: "sonoffs/cmnd/state"
          payload: "" 
#      - service: mqtt.publish
#        data:
#          topic: cmnd/sonoffs/POWER
#      - service: mqtt.publish
#        data:
#          topic: cmnd/sonoffs/POWER2
#      - service: mqtt.publish
#        data:
#          topic: cmnd/sonoffs/POWER3  
          
################################################################################
#	 Enforced Switch Entrance Light Off
#    if was turned on manually and has not turned off after 5 minute without movements
################################################################################
  - alias: Switch Enforced Entrance Light Off
    initial_state: true
    trigger:
      platform: time_pattern
#      hours: 00
      minutes: '/1'                     #every 1 minutes check whether we need to switch light off
#      seconds: 00

    condition:
      - condition: template
        value_template: "{{(as_timestamp(now()) - as_timestamp(states.binary_sensor.entrance_light_switched.last_changed)) | int > 300}}"
        
      - condition: state
        entity_id: binary_sensor.zwave_motion_sensor
        state: 'off'
# optional: trigger only if state was this for last X time.
        for:
#          hours: 1
          minutes: 5    #### 5 minutes without movements
#          seconds: 30
      - condition: state
        entity_id: switch.mqtt_6e0052_rl_2    #### corridor entrance ligh switch tasmota
        state: 'on'

    action:
      - service: homeassistant.turn_off
        entity_id: switch.mqtt_6e0052_rl_2   #### switch light off enforced programmably
#### debug message
      - service: telegram_bot.send_message
        data_template:
          target: [!secret telegram_bot_chat_id_beeline]
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}}  Enforced Switch Entrance Light Off after 5 minutes

################################################################################
#	 Enforced Switch StoreRoom Light Off
#    if was turned on manually and has not turned off after 10 minute without movements
################################################################################
  - alias: Switch Enforced StoreRoom Light Off
    initial_state: true
    trigger:
      platform: time_pattern
#      hours: 00
      minutes: '/1'                     #every 1 minutes check whether we need to switch light off
#      seconds: 00

    condition:
      - condition: template
        value_template: "{{(as_timestamp(now()) - as_timestamp(states.binary_sensor.entrance_light_switched.last_changed)) | int > 600}}"
# turn off light in storeroom after 10 minutes of inactivity in corridor

      - condition: state
        entity_id: binary_sensor.zwave_motion_sensor
        state: 'off'
# optional: trigger only if state was this for last X time.
        for:
#          hours: 1
          minutes: 10    #### 10 minutes without movements
#          seconds: 30
      - condition: state
        entity_id: switch.corridortasmota    #### corridor storeroom ligh switch tasmota
        state: 'on'

    action:
      - service: homeassistant.turn_off
        entity_id: switch.corridortasmota   #### switch light off enforced programmably
#### debug message
      - service: telegram_bot.send_message
        data_template:
          target: [!secret telegram_bot_chat_id_beeline]
          message: >
            {{now().strftime("%H:%M:%S %Y-%m-%d")}}  Enforced Switch StoreRoom Light Off after 600 seconds            

################################################################################
#	 Enforced manual Switch Entrance Light On
#    if was turned on manually in new test configuration 
#    with ButtonTopic corridor-manual activated in tasmota
################################################################################
  - alias: Manually Switch Entrance Light On
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.manual_entrance_light
        from: 'off'
        to: 'on'
    condition:       
      - condition: state
        entity_id: switch.mqtt_6e0052_rl_2     #### switch.corridortasmota_2
           # check the status of work - was not turned on before
        state: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: switch.mqtt_6e0052_rl_2   #### switch entrance light programmably switch.corridortasmota_2 ?


################################################################################
#	 Enforced manual Switch Entrance Light Off
#    if was turned off manually in new test configuration 
#    with ButtonTopic corridor-manual activated in tasmota
################################################################################
  - alias: Manually Switch Entrance Light Off
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.manual_entrance_light
        from: 'on'
        to: 'off'
    condition:       
      - condition: state
        entity_id: switch.mqtt_6e0052_rl_2    #### switch.corridortasmota_2
           # check the status of work - was not turned on before
        state: 'on'
    action:
      - service: homeassistant.turn_off
        entity_id: switch.mqtt_6e0052_rl_2   #### switch entrance light programmably switch.corridortasmota_2 ?

#switch.corridortasmota
################################################################################
#	 Enforced manual Switch Storeroom Light On
#    if was turned on manually in new test configuration 
#    with ButtonTopic corridor-manual activated in tasmota
################################################################################
  - alias: Manually Switch Entrance Light On
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.manual_storeroom_light
        from: 'off'
        to: 'on'
    condition:       
      - condition: state
        entity_id: switch.corridortasmota     #### 
           # check the status of work - was not turned on before
        state: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: switch.corridortasmota   #### switch storeroom light programmably 


################################################################################
#	 Enforced manual Switch Storeroom Light Off
#    if was turned off manually in new test configuration 
#    with ButtonTopic corridor-manual activated in tasmota
################################################################################
  - alias: Manually Switch Entrance Light Off
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.manual_storeroom_light
        from: 'on'
        to: 'off'
    condition:       
      - condition: state
        entity_id: switch.corridortasmota    #### 
           # check the status of work - was not turned on before
        state: 'on'
    action:
      - service: homeassistant.turn_off
        entity_id: switch.corridortasmota   #### switch entrance light programmably 